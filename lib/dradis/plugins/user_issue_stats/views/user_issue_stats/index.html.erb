<div class="container">
  <h2>User Issue Stats Dashboard</h2>

  <!-- Date Range Filter -->
  <div class="card mb-4">
    <div class="card-header">
      <h5>Filter by Date Range</h5>
      <% if params[:from].present? && params[:to].present? %>
        <div class="alert alert-info mt-2 mb-0">
          <i class="fas fa-filter"></i> <strong>Active Filter:</strong> 
          Showing issues from <strong><%= params[:from] %></strong> to <strong><%= params[:to] %></strong>
        </div>
      <% else %>
        <div class="alert alert-secondary mt-2 mb-0">
          <i class="fas fa-info-circle"></i> Showing <strong>all issues</strong> from all time periods
        </div>
      <% end %>
    </div>
    <div class="card-body">
      <form method="get" class="row g-3">
        <div class="col-md-4">
          <label for="from" class="form-label">From Date:</label>
          <input type="date" class="form-control" id="from" name="from" value="<%= params[:from] %>" />
        </div>
        <div class="col-md-4">
          <label for="to" class="form-label">To Date:</label>
          <input type="date" class="form-control" id="to" name="to" value="<%= params[:to] %>" />
        </div>
        <div class="col-md-4">
          <label class="form-label">&nbsp;</label>
          <div>
            <button type="submit" class="btn btn-primary">
              <i class="fas fa-search"></i> Apply Filter
            </button>
            <a href="<%= request.path %>" class="btn btn-secondary">
              <i class="fas fa-times"></i> Clear Filter
            </a>
            <button type="button" id="refresh-stats" class="btn btn-info">
              <i class="fas fa-sync-alt"></i> Refresh Stats
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <!-- Issue Statistics -->
  <div class="row">
    <!-- Total Issues -->
    <div class="col-md-3 mb-3">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">
            Total Issues
            <% if params[:from].present? && params[:to].present? %>
              <br><small class="text-muted">(Filtered)</small>
            <% end %>
          </h5>
          <h2 class="text-primary"><span id="total-badge"><%= @total %></span></h2>
        </div>
      </div>
    </div>

    <!-- Critical Issues -->
    <div class="col-md-3 mb-3">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">
            Critical
            <% if params[:from].present? && params[:to].present? %>
              <br><small class="text-muted">(Filtered)</small>
            <% end %>
          </h5>
          <h2 class="text-danger"><span id="critical-badge"><%= @critical_count %></span></h2>
        </div>
      </div>
    </div>

    <!-- High Issues -->
    <div class="col-md-3 mb-3">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">
            High
            <% if params[:from].present? && params[:to].present? %>
              <br><small class="text-muted">(Filtered)</small>
            <% end %>
          </h5>
          <h2 class="text-warning"><span id="high-badge"><%= @high_count %></span></h2>
        </div>
      </div>
    </div>

    <!-- Medium Issues -->
    <div class="col-md-3 mb-3">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">
            Medium
            <% if params[:from].present? && params[:to].present? %>
              <br><small class="text-muted">(Filtered)</small>
            <% end %>
          </h5>
          <h2 class="text-info"><span id="medium-badge"><%= @medium_count %></span></h2>
        </div>
      </div>
    </div>
  </div>

  <!-- Additional Severity Counts -->
  <div class="row">
    <div class="col-md-6 mb-3">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">
            Low
            <% if params[:from].present? && params[:to].present? %>
              <br><small class="text-muted">(Filtered)</small>
            <% end %>
          </h5>
          <h2 class="text-success"><span id="low-badge"><%= @low_count %></span></h2>
        </div>
      </div>
    </div>

    <div class="col-md-6 mb-3">
      <div class="card text-center">
        <div class="card-body">
          <h5 class="card-title">
            Info
            <% if params[:from].present? && params[:to].present? %>
              <br><small class="text-muted">(Filtered)</small>
            <% end %>
          </h5>
          <h2 class="text-secondary"><span id="info-badge"><%= @info_count %></span></h2>
        </div>
      </div>
    </div>
  </div>

  <!-- Issue Status Breakdown -->
  <% if @status_counts.any? %>
  <div class="card mb-4">
    <div class="card-header">
      <h5>Issue Status Breakdown
        <% if params[:from].present? && params[:to].present? %>
          <small class="text-muted">(Filtered: <%= params[:from] %> to <%= params[:to] %>)</small>
        <% else %>
          <small class="text-muted">(All Time)</small>
        <% end %>
      </h5>
    </div>
    <div class="card-body">
      <div class="row">
        <% @status_counts.each do |status, count| %>
        <div class="col-md-4 mb-2">
          <div class="d-flex justify-content-between">
            <span><%= status %>:</span>
            <strong><%= count %></strong>
          </div>
        </div>
        <% end %>
      </div>
    </div>
  </div>
  <% end %>

  <!-- Per-User Issue Statistics Across All Projects -->
  <% if @user_stats.any? %>
  <div class="card mb-4">
    <div class="card-header">
      <h5>Issues by User (All Projects)
        <% if params[:from].present? && params[:to].present? %>
          (Filtered: <%= params[:from] %> to <%= params[:to] %>)
        <% end %>
      </h5>
    </div>
    <div class="card-body">
      <div class="table-responsive">
        <table class="table table-striped">
          <thead>
            <tr>
              <th>User</th>
              <th>Projects</th>
              <th>Total</th>
              <th class="text-danger">Critical</th>
              <th class="text-warning">High</th>
              <th class="text-info">Medium</th>
              <th class="text-success">Low</th>
              <th class="text-secondary">Info</th>
              <th>Details</th>
            </tr>
          </thead>
          <tbody>
            <% @user_stats.each_with_index do |(user, stats), index| %>
            <tr>
              <td><strong><%= user %></strong></td>
              <td>
                <small class="text-muted">
                  <%= stats[:projects].join(', ') %>
                </small>
              </td>
              <td><span class="badge bg-primary"><%= stats[:total] %></span></td>
              <td>
                <% if stats[:critical] > 0 %>
                  <span class="badge bg-danger"><%= stats[:critical] %></span>
                <% else %>
                  <span class="text-muted">0</span>
                <% end %>
              </td>
              <td>
                <% if stats[:high] > 0 %>
                  <span class="badge bg-warning"><%= stats[:high] %></span>
                <% else %>
                  <span class="text-muted">0</span>
                <% end %>
              </td>
              <td>
                <% if stats[:medium] > 0 %>
                  <span class="badge bg-info"><%= stats[:medium] %></span>
                <% else %>
                  <span class="text-muted">0</span>
                <% end %>
              </td>
              <td>
                <% if stats[:low] > 0 %>
                  <span class="badge bg-success"><%= stats[:low] %></span>
                <% else %>
                  <span class="text-muted">0</span>
                <% end %>
              </td>
              <td>
                <% if stats[:info] > 0 %>
                  <span class="badge bg-secondary"><%= stats[:info] %></span>
                <% else %>
                  <span class="text-muted">0</span>
                <% end %>
              </td>
              <td>
                <button class="btn btn-sm btn-outline-info" type="button" data-bs-toggle="collapse" data-bs-target="#details-<%= index %>" aria-expanded="false">
                  View Projects
                </button>
              </td>
            </tr>
            <tr>
              <td colspan="9" class="p-0">
                <div class="collapse" id="details-<%= index %>">
                  <div class="card card-body m-2">
                    <h6>Project Breakdown for <%= user %>:</h6>
                    <div class="table-responsive">
                      <table class="table table-sm">
                        <thead>
                          <tr>
                            <th>Project</th>
                            <th>Total</th>
                            <th class="text-danger">Critical</th>
                            <th class="text-warning">High</th>
                            <th class="text-info">Medium</th>
                            <th class="text-success">Low</th>
                            <th class="text-secondary">Info</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% if @user_project_details[user] %>
                            <% @user_project_details[user].each do |project, project_stats| %>
                            <tr>
                              <td><strong><%= project %></strong></td>
                              <td><%= project_stats[:total] %></td>
                              <td><%= project_stats[:critical] %></td>
                              <td><%= project_stats[:high] %></td>
                              <td><%= project_stats[:medium] %></td>
                              <td><%= project_stats[:low] %></td>
                              <td><%= project_stats[:info] %></td>
                            </tr>
                            <% end %>
                          <% end %>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <% end %>

  <!-- Summary -->
  <div class="mt-4">
    <small class="text-muted">
      <% if params[:from].present? && params[:to].present? %>
        Showing issues from <%= params[:from] %> to <%= params[:to] %>
      <% else %>
        Showing all issues
      <% end %>
      | Last updated: <%= Time.current.strftime("%Y-%m-%d %H:%M") %>
    </small>
  </div>
</div>

<!-- JavaScript for enhanced UI functionality -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Auto-refresh functionality
  const refreshButton = document.getElementById('refresh-stats');
  if (refreshButton) {
    refreshButton.addEventListener('click', function(e) {
      e.preventDefault();
      refreshStats();
    });
  }
  
  // Live stats update function
  function refreshStats() {
    const fromDate = document.getElementById('from')?.value;
    const toDate = document.getElementById('to')?.value;
    
    let url = '<%= main_app.root_path %>stats/api/stats';
    const params = new URLSearchParams();
    
    if (fromDate) params.append('from', fromDate);
    if (toDate) params.append('to', toDate);
    
    if (params.toString()) {
      url += '?' + params.toString();
    }
    
    fetch(url, {
      method: 'GET',
      headers: {
        'Accept': 'application/json',
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        showAlert('Error loading stats: ' + data.error, 'danger');
      } else {
        updateStatsDisplay(data);
        showAlert('Statistics updated successfully!', 'success');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showAlert('Failed to refresh statistics', 'danger');
    });
  }
  
  // Update stats display with new data
  function updateStatsDisplay(data) {
    // Update badge numbers
    updateBadge('total-badge', data.total);
    updateBadge('critical-badge', data.critical);
    updateBadge('high-badge', data.high);
    updateBadge('medium-badge', data.medium);
    updateBadge('low-badge', data.low);
    updateBadge('info-badge', data.info);
    
    // Update timestamp
    const timestamp = document.querySelector('.text-muted small');
    if (timestamp) {
      timestamp.innerHTML = timestamp.innerHTML.replace(
        /Last updated: [\d\-\s:]+/, 
        'Last updated: ' + new Date().toISOString().slice(0, 16).replace('T', ' ')
      );
    }
  }
  
  // Helper function to update badge values
  function updateBadge(id, value) {
    const badge = document.getElementById(id);
    if (badge) {
      badge.textContent = value;
      // Add animation effect
      badge.classList.add('badge-updated');
      setTimeout(() => badge.classList.remove('badge-updated'), 1000);
    }
  }
  
  // Helper function to show alerts
  function showAlert(message, type) {
    const alertHtml = `
      <div class="alert alert-${type} alert-dismissible fade show" role="alert">
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    `;
    
    const container = document.querySelector('.container');
    if (container && container.firstElementChild) {
      container.insertAdjacentHTML('afterbegin', alertHtml);
      
      // Auto-dismiss success alerts after 3 seconds
      if (type === 'success') {
        setTimeout(() => {
          const alert = container.querySelector('.alert-success');
          if (alert) alert.remove();
        }, 3000);
      }
    }
  }
  
  // Add expandable rows functionality
  document.querySelectorAll('.expand-toggle').forEach(button => {
    button.addEventListener('click', function() {
      const target = document.querySelector(this.getAttribute('data-bs-target'));
      const icon = this.querySelector('i');
      
      if (target) {
        if (target.classList.contains('show')) {
          icon.classList.remove('fa-chevron-up');
          icon.classList.add('fa-chevron-down');
        } else {
          icon.classList.remove('fa-chevron-down');
          icon.classList.add('fa-chevron-up');
        }
      }
    });
  });
  
  // Add keyboard shortcuts
  document.addEventListener('keydown', function(e) {
    // Ctrl+R or F5 for refresh
    if ((e.ctrlKey && e.key === 'r') || e.key === 'F5') {
      e.preventDefault();
      refreshStats();
    }
  });
});
</script>

<!-- Enhanced CSS for better animations -->
<style>
.badge-updated {
  animation: pulse 0.5s ease-in-out;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.expand-toggle {
  cursor: pointer;
  transition: all 0.3s ease;
}

.expand-toggle:hover {
  background-color: rgba(0,0,0,0.05);
}

.card {
  transition: box-shadow 0.3s ease;
}

.card:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

/* Loading state for refresh button */
.btn.loading {
  opacity: 0.6;
  pointer-events: none;
}

.btn.loading::after {
  content: "";
  display: inline-block;
  width: 16px;
  height: 16px;
  margin-left: 8px;
  border: 2px solid #ffffff;
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}
</style>
